server:
    port: 8085
    servlet:
      context-path: /ddd

spring:
  application:
    name: spring-domain-driver-design
  threads:
    virtual:
      enabled: true
  datasource: #This is needed because docker compose is not able to detect the database if we are using custom docker images
    url: jdbc:postgresql://localhost:5434/doc_management_db
    username: postgres
    password: toor
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
      default_schema: documentcontent
    show-sql: true

  liquibase:
    change-log: classpath:db/changelog/DocumentContent-DOC_MANAGEMENT_DB/changeLog-master.xml
    default-schema: documentcontent

  docker:
    compose:
      skip:
        in-tests: false
      enabled: true
      file: classpath:docker/docker-compose.yml

  data:
    elasticsearch:
      repositories:
        enabled: true
      cluster-name: elasticsearch
      cluster-nodes: localhost:9200

elasticsearch:
  host: localhost                # ElasticSearch server address
  port: 9200                          # ElasticSearch server port
  username: elastic                   # Basic auth username
  password: 1iywLzMrAi-YOLP8-OWW      # Basic auth password

document:
  extraction:
    engine: tika

elastic:
  index:
    name: document
    type: _doc
  bulk:
    size: 100
  scroll:
    timeout: 1m
  max:
    result: 10000

spring-doc:
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    filter: true
    operations-sorter: alpha
  api-docs.path: /v3/rest-api-docs

logging:
  level:
    org:
      springframework:
        web: DEBUG
        data: DEBUG
